{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Harnoor Singh\\\\Documents\\\\GitHub\\\\covid-tracker-react\\\\src\\\\util.js\";\nimport React from 'react';\nimport { Circle, Popup } from 'react-leaflet';\nimport numeral from 'numeral';\nexport const sortData = data => {\n  const sortedData = [...data];\n  sortedData.sort((a, b) => {\n    if (a.cases > b.cases) {\n      return -1;\n    } else {\n      return 1;\n    }\n  });\n  return sortedData;\n};\nconst caseTypeColors = {\n  cases: {\n    color: \"#cc1034\",\n    multiplier: 800\n  },\n  recovered: {\n    color: \"#7dd71d\",\n    multiplier: 800\n  },\n  active: {\n    color: \"#1769aa\",\n    multiplier: 800\n  },\n  deaths: {\n    color: \"#333\",\n    multiplier: 1200\n  }\n};\nexport const showCirclesOnMap = (data, caseType = \"cases\") => {\n  if (data) {\n    caseType = caseType === \"activecase\" ? \"active\" : caseType;\n    let circles = data.map(country => /*#__PURE__*/_jsxDEV(Circle, {\n      center: [country.countryInfo ? country.countryInfo.lat : 20, country.countryInfo ? country.countryInfo.long : 70],\n      fillOpacity: 0.4,\n      fillColor: caseTypeColors[caseType].color,\n      color: caseTypeColors[caseType].color,\n      radius: Math.sqrt(country[caseType]) * caseTypeColors[caseType].multiplier,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-flag\",\n            style: {\n              backgroundImage: `url(${country.countryInfo.flag})`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-name\",\n            children: country.country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-cases\",\n            children: [\"Cases : \", numeral(country[\"cases\"]).format(\"0,0\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-activecase\",\n            children: [\"Active : \", numeral(country[\"active\"]).format(\"0,0\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-recovered\",\n            children: [\"Recovered : \", numeral(country[\"recovered\"]).format(\"0,0\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-deaths\",\n            children: [\"Deaths : \", numeral(country[\"deaths\"]).format(\"0,0\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this));\n    return circles;\n  }\n};","map":{"version":3,"sources":["C:/Users/Harnoor Singh/Documents/GitHub/covid-tracker-react/src/util.js"],"names":["React","Circle","Popup","numeral","sortData","data","sortedData","sort","a","b","cases","caseTypeColors","color","multiplier","recovered","active","deaths","showCirclesOnMap","caseType","circles","map","country","countryInfo","lat","long","Math","sqrt","backgroundImage","flag","format"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Circle, Popup } from 'react-leaflet';\nimport numeral from 'numeral'\n\nexport const sortData = (data) => {\n    const sortedData = [...data];\n    sortedData.sort((a, b) => {\n        if (a.cases > b.cases) {\n            return -1;\n        } else {\n            return 1;\n        }\n    });\n    return sortedData;\n}\nconst caseTypeColors = {\n    cases: {\n        color: \"#cc1034\",\n        multiplier: 800\n    },\n    recovered: {\n        color: \"#7dd71d\",\n        multiplier: 800\n    },\n    active: {\n        color: \"#1769aa\",\n        multiplier: 800\n    },\n    deaths: {\n        color: \"#333\",\n        multiplier: 1200\n    }\n}\nexport const showCirclesOnMap = (data, caseType = \"cases\") => {\n    if (data) {\n        caseType = caseType === \"activecase\" ? \"active\" : caseType \n        let circles = data.map((country) => (\n            <Circle\n                center={[country.countryInfo ? country.countryInfo.lat : 20, \n                    country.countryInfo ? country.countryInfo.long : 70]}\n                fillOpacity={0.4}\n                fillColor={caseTypeColors[caseType].color}\n                color={caseTypeColors[caseType].color}\n                radius={Math.sqrt(country[caseType]) * caseTypeColors[caseType].multiplier}\n            >\n                <Popup>\n                    <div className=\"info-container\">\n                        <div className=\"info-flag\"\n                        style={{backgroundImage:`url(${country.countryInfo.flag})`}}\n                        >\n                          \n                        </div>\n                        <div className=\"info-name\">{country.country}</div>\n                        <div className=\"info-cases\">\n                            Cases : {numeral(country[\"cases\"]).format(\"0,0\")}\n                        </div>\n                        <div className=\"info-activecase\">\n                            Active : {numeral(country[\"active\"]).format(\"0,0\")}\n                        </div>\n                        <div className=\"info-recovered\">\n                            Recovered : {numeral(country[\"recovered\"]).format(\"0,0\")}\n                        </div>\n                        <div className=\"info-deaths\">\n                            Deaths : {numeral(country[\"deaths\"]).format(\"0,0\")}\n                        </div>\n                    </div>\n                </Popup>\n\n            </Circle>\n        ))\n        return circles;\n    }\n}"]},"metadata":{},"sourceType":"module"}
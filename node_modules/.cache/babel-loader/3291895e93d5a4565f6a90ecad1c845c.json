{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Harnoor Singh\\\\Documents\\\\GitHub\\\\covid-tracker-react\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardContent } from '@material-ui/core';\nimport { FormControl, Select, MenuItem } from '@material-ui/core';\nimport './App.css';\nimport Infobox from './Infobox';\nimport Map from './Map';\nimport Table from './Table';\nimport { sortData } from './util.js';\nimport Linegraph from './Linegraph';\nimport \"leaflet/dist/leaflet.css\";\n\nfunction App() {\n  _s();\n\n  const [countryInfo, setCountryInfo] = useState([]);\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(\"worldwide\");\n  const [tableData, setTableData] = useState([]);\n  const [caseType, setCaseType] = useState(\"cases\");\n  const [mapCenter, setmapCenter] = useState({\n    lat: 34.80746,\n    lng: -40.4796\n  });\n  const [mapZoom, setmapZoom] = useState(3);\n  const [mapCountries, setmapCountries] = useState([]);\n  useEffect(() => {\n    const getCountryInfo = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/all\").then(response => response.json()).then(data => {\n        console.log(data);\n        setCountryInfo(data);\n      });\n    };\n\n    getCountryInfo();\n  }, []);\n  useEffect(() => {\n    const getCountries = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\").then(response => response.json()).then(data => {\n        const countries = data.map(country => ({\n          name: country.country,\n          value: country.countryInfo.iso2\n        }));\n        setCountries(countries);\n        setTableData(sortData(data));\n        setmapCountries(data);\n      });\n    };\n\n    getCountries();\n  }, []);\n\n  function onCountryChange(event) {\n    const countryCode = event.target.value;\n    let url = countryCode === \"worldwide\" ? \"https://disease.sh/v3/covid-19/all\" : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n    const getCountryInfo = async () => {\n      await fetch(url).then(response => response.json()).then(data => {\n        setCountryInfo(data);\n        setCountry(countryCode);\n        let lat = data.countryInfo ? data.countryInfo.lat : 20;\n        let long = data.countryInfo ? data.countryInfo.long : 70;\n        console.log(data);\n        setmapCenter([lat, long]);\n        setmapZoom(4);\n      });\n    };\n\n    getCountryInfo();\n  }\n\n  function onInfoboxClick(caseType) {\n    if (caseType === \"cases\") {\n      setCaseType(\"cases\");\n    } else if (caseType === \"recovered\") {\n      setCaseType(\"recovered\");\n    } else if (caseType === \"activecase\") {\n      setCaseType(\"activecase\");\n      return;\n    } else {\n      setCaseType(\"deaths\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__left\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Covid-19 Tracker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            value: country,\n            variant: \"outlined\",\n            onChange: onCountryChange,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"worldwide\",\n              children: \"Worldwide\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), countries.map(country => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: country.value,\n              children: country.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__stats\",\n        children: [/*#__PURE__*/_jsxDEV(Infobox, {\n          title: \"Confirmed\",\n          active: caseType === \"cases\",\n          cases: countryInfo.todayCases,\n          total: countryInfo.cases,\n          caseType: \"cases\",\n          updated: countryInfo.updated,\n          onClick: () => onInfoboxClick(\"cases\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Infobox, {\n          title: \"Active\",\n          active: caseType === \"activecase\",\n          cases: countryInfo.todayCases - countryInfo.todayRecovered - countryInfo.todayDeaths,\n          total: countryInfo.active,\n          caseType: \"activecase\",\n          updated: countryInfo.updated,\n          onClick: () => onInfoboxClick(\"activecase\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Infobox, {\n          title: \"Recovered\",\n          active: caseType === \"recovered\",\n          cases: countryInfo.todayRecovered,\n          total: countryInfo.recovered,\n          caseType: \"recovered\",\n          updated: countryInfo.updated,\n          onClick: () => onInfoboxClick(\"recovered\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Infobox, {\n          title: \"Deaths\",\n          active: caseType === \"deaths\",\n          cases: countryInfo.todayDeaths,\n          caseType: \"deaths\",\n          total: countryInfo.deaths,\n          updated: countryInfo.updated,\n          onClick: () => onInfoboxClick(\"deaths\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Map, {\n        center: mapCenter,\n        zoom: mapZoom,\n        countries: mapCountries,\n        caseType: caseType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"app__right\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Live cases by country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          countries: tableData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 43\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Worldwide new \", caseType]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 44\n        }, this), /*#__PURE__*/_jsxDEV(Linegraph, {\n          caseTypes: caseType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"dZNYvefqbWGfimHfn5BWRStELDo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Harnoor Singh/Documents/GitHub/covid-tracker-react/src/App.js"],"names":["React","useState","useEffect","Card","CardContent","FormControl","Select","MenuItem","Infobox","Map","Table","sortData","Linegraph","App","countryInfo","setCountryInfo","countries","setCountries","country","setCountry","tableData","setTableData","caseType","setCaseType","mapCenter","setmapCenter","lat","lng","mapZoom","setmapZoom","mapCountries","setmapCountries","getCountryInfo","fetch","then","response","json","data","console","log","getCountries","map","name","value","iso2","onCountryChange","event","countryCode","target","url","long","onInfoboxClick","todayCases","cases","updated","todayRecovered","todayDeaths","active","recovered","deaths"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card, CardContent } from '@material-ui/core';\nimport { FormControl, Select, MenuItem } from '@material-ui/core';\nimport './App.css';\nimport Infobox from './Infobox';\nimport Map from './Map'\nimport Table from './Table';\nimport { sortData } from './util.js';\nimport Linegraph from './Linegraph';\nimport \"leaflet/dist/leaflet.css\";\n\nfunction App() {\n  const [countryInfo, setCountryInfo] = useState([]);\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(\"worldwide\");\n  const [tableData, setTableData] = useState([]);\n  const [caseType, setCaseType] = useState(\"cases\");\n  const [mapCenter, setmapCenter] = useState({\n    lat: 34.80746,\n    lng: -40.4796\n  })\n  const [mapZoom, setmapZoom] = useState(3);\n  const [mapCountries, setmapCountries] = useState([])\n  useEffect(() => {\n    const getCountryInfo = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/all\")\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(data);\n          setCountryInfo(data);\n        })\n    }\n    getCountryInfo();\n  }, [])\n  useEffect(() => {\n    const getCountries = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((response) => response.json())\n        .then((data) => {\n          const countries = data.map((country) => ({\n            name: country.country,\n            value: country.countryInfo.iso2\n          }));\n          setCountries(countries);\n          setTableData(sortData(data));\n          setmapCountries(data);\n        });\n    };\n    getCountries();\n  }, []);\n  function onCountryChange(event) {\n    const countryCode = event.target.value;\n    let url = countryCode === \"worldwide\" ?\n      \"https://disease.sh/v3/covid-19/all\" : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    const getCountryInfo = async () => {\n      await fetch(url)\n        .then((response) => response.json())\n        .then((data) => {\n          setCountryInfo(data);\n          setCountry(countryCode);\n          let lat = data.countryInfo ? data.countryInfo.lat : 20;\n          let long = data.countryInfo ? data.countryInfo.long : 70;\n          console.log(data);\n          setmapCenter([lat, long]);\n          setmapZoom(4)\n        })\n    };\n    getCountryInfo();\n\n  }\n  function onInfoboxClick(caseType) {\n    if (caseType === \"cases\") {\n      setCaseType(\"cases\")\n    } else if (caseType === \"recovered\") {\n      setCaseType(\"recovered\")\n    } else if (caseType === \"activecase\") {\n      setCaseType(\"activecase\");\n      return\n    } else {\n      setCaseType(\"deaths\");\n    }\n  }\n  return (\n    <div className=\"app\">\n      <div className=\"app__left\">\n        <div className=\"app__header\">\n          <h1>Covid-19 Tracker</h1>\n          <FormControl>\n            <Select value={country} variant=\"outlined\" onChange={onCountryChange}>\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n              {\n                countries.map((country) => (\n                  <MenuItem value={country.value}>{country.name}</MenuItem>\n                ))\n              }\n            </Select>\n          </FormControl>\n        </div>\n        <div className=\"app__stats\">\n          <Infobox title=\"Confirmed\"\n            active={caseType === \"cases\"}\n            cases={countryInfo.todayCases}\n            total={countryInfo.cases}\n            caseType=\"cases\"\n            updated={countryInfo.updated}\n            onClick={() => onInfoboxClick(\"cases\")} />\n          <Infobox title=\"Active\"\n            active={caseType === \"activecase\"}\n            cases={countryInfo.todayCases - countryInfo.todayRecovered - countryInfo.todayDeaths}\n            total={countryInfo.active}\n            caseType=\"activecase\"\n            updated={countryInfo.updated}\n            onClick={() => onInfoboxClick(\"activecase\")} />\n          <Infobox title=\"Recovered\"\n            active={caseType === \"recovered\"}\n            cases={countryInfo.todayRecovered}\n            total={countryInfo.recovered}\n            caseType=\"recovered\"\n            updated={countryInfo.updated}\n            onClick={() => onInfoboxClick(\"recovered\")} />\n          <Infobox title=\"Deaths\"\n            active={caseType === \"deaths\"}\n            cases={countryInfo.todayDeaths}\n            caseType=\"deaths\"\n            total={countryInfo.deaths}\n            updated={countryInfo.updated}\n            onClick={() => onInfoboxClick(\"deaths\")} />\n        </div>\n        <Map center={mapCenter} zoom={mapZoom} countries={mapCountries} caseType={caseType} />\n      </div>\n      <Card className=\"app__right\">\n        <CardContent>\n          <h3>Live cases by country</h3>\n          <Table countries={tableData} /> <br />\n          <h3>Worldwide new {caseType}</h3><br />\n          <Linegraph caseTypes={caseType} />\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}